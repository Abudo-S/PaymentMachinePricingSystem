syntax = "proto3";

import "google/api/annotations.proto";
//import "google/protobuf/timestamp.proto";
//import "google/protobuf/duration.proto";
import "GenericMessages.proto";

package MicroservicesProtos;

service WeekPayModel {
  rpc UpsertWeekPayModel (UpsertWeekPayModelRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/WeekPayModel/UpsertWeekPayModel"
      body: "*"
    };
  }
  rpc GetWeekPayModel (GetWeekPayModelRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/WeekPayModel/GetWeekPayModel"
      body: "*"
    };
  }
  rpc GetWeekPayModels (GetWeekPayModelsRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/WeekPayModel/GetWeekPayModels"
      body: "*"
    };
  }
  rpc DeleteWeekPayModel (DeleteWeekPayModelRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/WeekPayModel/DeleteWeekPayModel"
      body: "*"
    };
  }
  rpc CalculateWeekFee (CalculateWeekFeeRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/WeekPayModel/CalculateWeekFee"
      body: "*"
    };
  }
  rpc NotifyHandledRequest (GenericMessages.NotifyHandledRequestMsg) returns (GenericMessages.SyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/WeekPayModel/NotifyHandledRequest"
      body: "*"
    };
  }
  rpc GetNotifiedRequests (GenericMessages.GetNotifiedRequestsRequest) returns (GenericMessages.GetNotifiedRequestsResponse)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/WeekPayModel/GetNotifiedRequests"
      body: "*"
    };
  }
  rpc CanIHandle (GenericMessages.CanIHandleRequest) returns (GenericMessages.SyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/WeekPayModel/CanIHandle"
      body: "*"
    };
  }
  rpc CanICoordinate (GenericMessages.CanICoordinateRequest) returns (GenericMessages.SyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/WeekPayModel/CanICoordinate"
      body: "*"
    };
  }
  rpc ConsiderNodeCoordinator (GenericMessages.ConsiderNodeCoordinatorRequest) returns (GenericMessages.SyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/WeekPayModel/ConsiderNodeCoordinator"
      body: "*"
    };
  }
  rpc GetCoordinatorIp (GenericMessages.GetCoordinatorIpRequest) returns (GenericMessages.GetCoordinatorIpResponse)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/WeekPayModel/GetCoordinatorIp"
      body: "*"
    };
  }
  rpc AddClusterNode (GenericMessages.AddOrRemoveClusterNodeRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/WeekPayModel/AddClusterNode"
      body: "*"
    };
  }
  rpc RemoveClusterNode (GenericMessages.AddOrRemoveClusterNodeRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/WeekPayModel/RemoveClusterNode"
      body: "*"
    };
  }
  rpc IsAlive (GenericMessages.IsAliveRequest) returns (GenericMessages.SyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/WeekPayModel/IsAlive"
      body: "*"
    };
  }
}

//STR Requests
message UpsertWeekPayModelRequest {
  GenericMessages.GenericRequestData RequestCamp = 1;
  WeekPayModelType WeekPayModel = 2;
}

message GetWeekPayModelRequest {
  GenericMessages.GenericRequestData RequestCamp = 1;
  int32 Id = 2;
}

message GetWeekPayModelsRequest {
  GenericMessages.GenericRequestData RequestCamp = 1;
}

message DeleteWeekPayModelRequest {
  GenericMessages.GenericRequestData RequestCamp = 1;
  int32 Id = 2;
}

message CalculateWeekFeeRequest {
  GenericMessages.GenericRequestData RequestCamp = 1;
  double Start = 2; //OA time
  double End = 3;  //OA time
}
//END Requests

//STR Responses
message UpsertWeekPayModelResponse {
  GenericMessages.OperationResult Result = 1;
  WeekPayModelType WeekPayModel = 3;
}

message GetWeekPayModelResponse {
  GenericMessages.OperationResult Result = 1;
  WeekPayModelType WeekPayModel = 2;
}

message GetWeekPayModelsResponse {
  GenericMessages.OperationResult Result = 1;
  repeated WeekPayModelType WeekPayModel = 2;
}

message DeleteWeekPayModelResponse {
  GenericMessages.OperationResult Result = 1;
}

message CalculateWeekFeeResponse {
  GenericMessages.OperationResult Result = 1;
  double Fee = 2;
}

message WeekPayModelType {
   int32 Id = 1;
   int32 MondayRateId = 2;
   int32 TuesdayRateId = 3;
   int32 WednesdayRateId = 4;
   int32 ThursdayRateId = 5;
   int32 FridayRateId = 6;
   int32 SaturdayRateId = 7;
   int32 SundayRateId = 8;
   double WeekDayPercentBonus = 9;
   int32 WeekDayStandardRateId = 10;
}
//END Responses

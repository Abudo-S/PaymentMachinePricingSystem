syntax = "proto3";

import "google/api/annotations.proto";
//import "google/protobuf/timestamp.proto";
//import "google/protobuf/duration.proto";
import "GenericMessages.proto";
import "TimeInterval.proto";
import "DayRate.proto";
import "WeekPayModel.proto";


package MiddlewareProtos;

service RequestHandler {
  rpc NotifyClusterCoordinator (NotifyClusterCoordinatorRequest) returns (GenericMessages.SyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MiddlewareProtos/RequestHandler/NotifyClusterCoordinator"
      body: "*"
    };
  }
  rpc NotifyProcessedRequest (NotifyProcessedRequestMessage) returns (GenericMessages.SyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MiddlewareProtos/RequestHandler/NotifyProcessedResponse"
      body: "*"
    };
  }
  rpc CalculateFee (CalculateFeeRequest) returns (CalculateFeeResponse)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MiddlewareProtos/RequestHandler/CalculateFee"
      body: "*"
    };
  }

  rpc UpsertDayRate (UpsertDayRateRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MiddlewareProtos/RequestHandler/UpsertDayRate"
      body: "*"
    };
  }
  rpc GetDayRate (GetDayRateRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MiddlewareProtos/RequestHandler/GetDayRate"
      body: "*"
    };
  }
  rpc GetDayRates (GetDayRatesRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MiddlewareProtos/RequestHandler/GetDayRates"
      body: "*"
    };
  }
  rpc DeleteDayRate (DeleteDayRateRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MiddlewareProtos/RequestHandler/DeleteDayRate"
      body: "*"
    };
  }
}

//STR Requests
message NotifyClusterCoordinatorRequest {
    string CoordinatorEndpoint = 1;
    string ClusterType = 2;
}

message NotifyProcessedRequestMessage {
    string RequestId = 1;
    string ResponseType = 2;
    string ResponseJson = 3;
}

message CalculateFeeRequest {
    string RequestId = 1;
    string SenderEndpoint = 2;
    double StartDateTime = 3; //OA time
    double EndDateTime = 4; //OA time
}

//STR DayRate CRUD
message UpsertDayRateRequest {
  string RequestId = 1; //essential to remap responses to relative client request
  string SenderEndpoint = 2;
  MicroservicesProtos.DayRateType DayRate = 3;
}

message GetDayRateRequest {
  string RequestId = 1;
  string SenderEndpoint = 2;
  int32 Id = 3;
}

message GetDayRatesRequest {
  string RequestId = 1;
  string SenderEndpoint = 2;
}

message DeleteDayRateRequest {
  string RequestId = 1;
  string SenderEndpoint = 2;
  int32 Id = 3;
}
//END DayRate CRUD

//End Requests


//STR Responses
message CalculateFeeResponse {
    double Fee = 1;
    string RequestId = 2;
}

//END Responses

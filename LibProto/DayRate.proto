syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "GenericMessages.proto";

package MicroservicesProtos;

service DayRate {
  rpc UpsertDayRate (UpsertDayRateRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/UpsertDayRate"
      body: "*"
    };
  }
  rpc GetDayRate (GetDayRateRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/GetDayRate"
      body: "*"
    };
  }
  rpc GetDayRates (GetDayRatesRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/GetDayRates"
      body: "*"
    };
  }
  rpc DeleteDayRate (DeleteDayRateRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/DeleteDayRate"
      body: "*"
    };
  }
  rpc CalculateDayFee (CalculateDayFeeRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/CalculateDayFee"
      body: "*"
    };
  }
  rpc IsAlive (GenericMessages.IsAliveResult) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/IsAlive"
      body: "*"
    };
  }
}

//STR Requests
message UpsertDayRateRequest {
  string RequestId = 1;
  DayRateType DayRate = 2;
}

message GetDayRateRequest {
  string RequestId = 1;
  int32 Id = 2;
}

message GetDayRatesRequest {
  string RequestId = 1;
}

message DeleteDayRateRequest {
  string RequestId = 1;
  int32 Id = 2;
}

message CalculateDayFeeRequest {
  string RequestId = 1;
  int64 Start = 2; //duration in seconds
  int64 End = 3; //duration in seconds
}
//End Requests

//STR Responses
message UpsertDayRateResponse {
  string RequestId = 1;
  GenericMessages.OperationResult Result = 2;
  DayRateType DayRate = 3;
}

message GetDayRateResponse {
  string RequestId = 1;
  GenericMessages.OperationResult Result = 2;
  DayRateType DayRate = 3;
}

message GetDayRatesResponse {
  string RequestId = 1;
  GenericMessages.OperationResult Result = 2;
  repeated DayRateType DayRate = 3;
}

message DeleteDayRateResponse {
  string RequestId = 1;
  GenericMessages.OperationResult Result = 2;
}

message CalculateDayRangeFeeResponse {
  string RequestId = 1;
  GenericMessages.OperationResult Result = 2;
  double Fee = 3;
}

message DayRateType {
   int32 Id = 1;
   int32 FreeMinutes = 2;
   double MaxAmount = 3;
   int32 CorrespondentDay = 4;
}
//END Responses

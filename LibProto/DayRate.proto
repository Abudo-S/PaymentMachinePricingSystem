syntax = "proto3";

import "google/api/annotations.proto";
//import "google/protobuf/timestamp.proto";
//import "google/protobuf/duration.proto";
import "GenericMessages.proto";

package MicroservicesProtos;

service DayRate {
  rpc UpsertDayRate (UpsertDayRateRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/UpsertDayRate"
      body: "*"
    };
  }
  rpc GetDayRate (GetDayRateRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/GetDayRate"
      body: "*"
    };
  }
  rpc GetDayRates (GetDayRatesRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/GetDayRates"
      body: "*"
    };
  }
  rpc DeleteDayRate (DeleteDayRateRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/DeleteDayRate"
      body: "*"
    };
  }
  rpc CalculateDayFee (CalculateDayFeeRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/CalculateDayFee"
      body: "*"
    };
  }
  rpc NotifyHandledRequest (GenericMessages.NotifyHandledRequestMsg) returns (GenericMessages.SyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/NotifyHandledRequest"
      body: "*"
    };
  }
  rpc GetNotifiedRequests (GenericMessages.GetNotifiedRequestsRequest) returns (GenericMessages.GetNotifiedRequestsResponse)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/GetNotifiedRequests"
      body: "*"
    };
  }
  rpc CanIHandle (GenericMessages.CanIHandleRequest) returns (GenericMessages.SyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/CanIHandle"
      body: "*"
    };
  }
  rpc CanICoordinate (GenericMessages.CanICoordinateRequest) returns (GenericMessages.SyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/CanICoordinate"
      body: "*"
    };
  }
  rpc ConsiderNodeCoordinator (GenericMessages.ConsiderNodeCoordinatorRequest) returns (GenericMessages.SyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/ConsiderNodeCoordinator"
      body: "*"
    };
  }
  rpc GetCoordinatorIp (GenericMessages.GetCoordinatorIpRequest) returns (GenericMessages.GetCoordinatorIpResponse)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/GetCoordinatorIp"
      body: "*"
    };
  }
  rpc AddClusterNode (GenericMessages.AddOrRemoveClusterNodeRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/AddClusterNode"
      body: "*"
    };
  }
  rpc RemoveClusterNode (GenericMessages.AddOrRemoveClusterNodeRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/RemoveClusterNode"
      body: "*"
    };
  }
  rpc NotifyNodePresence(GenericMessages.NotifyNodePresenceRequest) returns (GenericMessages.AsyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/NotifyNodePresence"
      body: "*"
    };
  }
  rpc SetDefaultOperationDelay(GenericMessages.SetDefaultOperationDelayRequest) returns (GenericMessages.AsyncResult)
  {
      option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/SetDefaultOperationDelay"
      body: "*"
    };
  }
  rpc IsAlive (GenericMessages.IsAliveRequest) returns (GenericMessages.SyncResult)
  {
	  option (google.api.http) = {
      post: "/HttpAPI/MicroservicesProtos/DayRate/IsAlive"
      body: "*"
    };
  }
}

//STR Requests
message UpsertDayRateRequest {
  GenericMessages.GenericRequestData RequestCamp = 1;
  DayRateType DayRate = 2;
}

message GetDayRateRequest {
  GenericMessages.GenericRequestData RequestCamp = 1;
  int32 Id = 2;
}

message GetDayRatesRequest {
  GenericMessages.GenericRequestData RequestCamp = 1;
}

message DeleteDayRateRequest {
  GenericMessages.GenericRequestData RequestCamp = 1;
  int32 Id = 2;
}

message CalculateDayFeeRequest {
  GenericMessages.GenericRequestData RequestCamp = 1;
  int64 Start = 2; //duration in seconds
  int64 End = 3; //duration in seconds
}
//End Requests

//STR Responses
message UpsertDayRateResponse {
  GenericMessages.OperationResult Result = 1;
}

message GetDayRateResponse {
  GenericMessages.OperationResult Result = 1;
  DayRateType DayRate = 2;
}

message GetDayRatesResponse {
  GenericMessages.OperationResult Result = 1;
  repeated DayRateType DayRate = 2;
}

message DeleteDayRateResponse {
  GenericMessages.OperationResult Result = 1;
}

message CalculateDayFeeResponse {
  GenericMessages.OperationResult Result = 1;
  double Fee = 2;
}

message DayRateType {
   int32 Id = 1;
   int32 FreeMinutes = 2;
   double MaxAmount = 3;
   int32 CorrespondentDay = 4;
}
//END Responses

version: '3.4'

services:
  mongo:
    container_name: pricingsystem_mongodb
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_DATABASE: PricingSystemDB
    ports:
      - "5001:6379"
    networks:
      paymentMachinePricingSystem_network:
        ipv4_address: 172.18.0.2
    volumes:
      - /data/db
    command: ["mongod", "--port", "6379"]

  redis:
    container_name: weekpaymodelservice_redis
    image: redis
    restart: always
    ports:
      - "5002:6379"
    networks:
      paymentMachinePricingSystem_network:
        ipv4_address: 172.18.0.3
    volumes:
      - /weekpaymodelservice_redis/conf:/usr/local/etc/redis

  redis1:
    container_name: dayrateservice_redis
    image: redis
    restart: always
    ports:
      - "5003:6379"
    networks:
      paymentMachinePricingSystem_network:
        ipv4_address: 172.18.0.4
    volumes:
      - /dayrateservice_redis/conf:/usr/local/etc/redis
 
  redis2:
    container_name: timeintervalservice_redis
    image: redis
    restart: always
    ports:
      - "5004:6379"
    networks:
      paymentMachinePricingSystem_network:
        ipv4_address: 172.18.0.5
    volumes:
      - /timeintervalservice_redis/conf:/usr/local/etc/redis

  RequestHandlerMiddleware:
    container_name: ${DOCKER_REGISTRY-}requesthandlermiddleware
    image: requesthandlermiddleware
    restart: always
    build:
      context: .
      dockerfile: ./RequestHandlerMiddleware/Dockerfile
    environment:
      - ASPNETCORE_ENVIORNMENT=Development
      - ASPNETCORE_HTTP_PORTS=80
      - ASPNETCORE_URLS=http://+
    ports:
      - "5500:80"
    networks:
      paymentMachinePricingSystem_network:
        ipv4_address: 172.18.0.6
    volumes:
       - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets.ro
       - ${APPDATA}/ASP.NET/HTTPS:/root/.aspnet/https:ro
       - ${APPDATA}/ASP.NET/HTTP:/root/.aspnet/http:ro
 
  WeekPayModelService:
    container_name: ${DOCKER_REGISTRY-}weekpaymodelservice
    image: weekpaymodelservice
    restart: always
    build:
      context: .
      dockerfile: ./WeekPayModelService/Dockerfile
    environment:
      - ASPNETCORE_ENVIORNMENT=Development
      - ASPNETCORE_HTTP_PORTS=80
      - ASPNETCORE_URLS=http://+
    ports:
      - "6000:80"
    networks:
      paymentMachinePricingSystem_network:
        ipv4_address: 172.18.0.7
    volumes:
       - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets.ro
       - ${APPDATA}/ASP.NET/HTTPS:/root/.aspnet/https:ro
       - ${APPDATA}/ASP.NET/HTTP:/root/.aspnet/http:ro

  WeekPayModelService1:
    container_name: ${DOCKER_REGISTRY-}weekpaymodelservice1
    image: weekpaymodelservice
    restart: always
    build:
      context: .
      dockerfile: ./WeekPayModelService/Dockerfile
    environment:
      - ASPNETCORE_ENVIORNMENT=Development
      - ASPNETCORE_HTTP_PORTS=80
      - ASPNETCORE_URLS=http://+
    ports:
      - "7000:80"
    networks:
      paymentMachinePricingSystem_network:
        ipv4_address: 172.18.0.8
    volumes:
       - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets.ro
       - ${APPDATA}/ASP.NET/HTTPS:/root/.aspnet/https:ro
       - ${APPDATA}/ASP.NET/HTTP:/root/.aspnet/http:ro
  
  WeekPayModelService2:
    container_name: ${DOCKER_REGISTRY-}weekpaymodelservice2
    image: weekpaymodelservice
    restart: always
    build:
      context: .
      dockerfile: ./WeekPayModelService/Dockerfile
    environment:
      - ASPNETCORE_ENVIORNMENT=Development
      - ASPNETCORE_HTTP_PORTS=80
      - ASPNETCORE_URLS=http://+
    ports:
      - "8000:80"
    networks:
      paymentMachinePricingSystem_network:
        ipv4_address: 172.18.0.9
    volumes:
       - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets.ro
       - ${APPDATA}/ASP.NET/HTTPS:/root/.aspnet/https:ro
       - ${APPDATA}/ASP.NET/HTTP:/root/.aspnet/http:ro

  DayRateService:
    container_name: ${DOCKER_REGISTRY-}dayrateservice
    image: dayrateservice
    restart: always
    build:
      context: .
      dockerfile: ./DayRateService/Dockerfile
    environment:
      - ASPNETCORE_ENVIORNMENT=Development
      - ASPNETCORE_HTTP_PORTS=80
      - ASPNETCORE_URLS=http://+
    ports:
      - "9000:80"
    networks:
      paymentMachinePricingSystem_network:
        ipv4_address: 172.18.0.10
    volumes:
       - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets.ro
       - ${APPDATA}/ASP.NET/HTTPS:/root/.aspnet/https:ro
       - ${APPDATA}/ASP.NET/HTTP:/root/.aspnet/http:ro

  DayRateService1:
    container_name: ${DOCKER_REGISTRY-}dayrateservice1
    image: dayrateservice
    restart: always
    build:
      context: .
      dockerfile: ./DayRateService/Dockerfile
    environment:
      - ASPNETCORE_ENVIORNMENT=Development
      - ASPNETCORE_HTTP_PORTS=80
      - ASPNETCORE_URLS=http://+
    ports:
      - "10000:80"
    networks:
      paymentMachinePricingSystem_network:
        ipv4_address: 172.18.0.11
    volumes:
       - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets.ro
       - ${APPDATA}/ASP.NET/HTTPS:/root/.aspnet/https:ro
       - ${APPDATA}/ASP.NET/HTTP:/root/.aspnet/http:ro

  DayRateService2:
    container_name: ${DOCKER_REGISTRY-}dayrateservice2
    image: dayrateservice
    restart: always
    build:
      context: .
      dockerfile: ./DayRateService/Dockerfile
    environment:
      - ASPNETCORE_ENVIORNMENT=Development
      - ASPNETCORE_HTTP_PORTS=80
      - ASPNETCORE_URLS=http://+
    ports:
      - "11000:80"
    networks:
      paymentMachinePricingSystem_network:
        ipv4_address: 172.18.0.12
    volumes:
       - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets.ro
       - ${APPDATA}/ASP.NET/HTTPS:/root/.aspnet/https:ro
       - ${APPDATA}/ASP.NET/HTTP:/root/.aspnet/http:ro

  TimeIntervalService:
    container_name: ${DOCKER_REGISTRY-}timeintervalservice
    image: timeintervalservice
    restart: always
    build:
      context: .
      dockerfile: ./TimeIntervalService/Dockerfile
    environment:
      - ASPNETCORE_ENVIORNMENT=Development
      - ASPNETCORE_HTTP_PORTS=80
      - ASPNETCORE_URLS=http://+
    ports:
      - "18000:8080"
    networks:
      paymentMachinePricingSystem_network:
        ipv4_address: 172.18.0.13
    volumes:
       - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets.ro
       - ${APPDATA}/ASP.NET/HTTPS:/root/.aspnet/https:ro
       - ${APPDATA}/ASP.NET/HTTP:/root/.aspnet/http:ro

  TimeIntervalService1:
    container_name: ${DOCKER_REGISTRY-}timeintervalservice1
    image: timeintervalservice
    restart: always
    build:
      context: .
      dockerfile: ./TimeIntervalService/Dockerfile
    environment:
      - ASPNETCORE_ENVIORNMENT=Development
      - ASPNETCORE_HTTP_PORTS=80
      - ASPNETCORE_URLS=http://+
    ports:
      - "18100:8080"
    networks:
      paymentMachinePricingSystem_network:
        ipv4_address: 172.18.0.14
    volumes:
       - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets.ro
       - ${APPDATA}/ASP.NET/HTTPS:/root/.aspnet/https:ro
       - ${APPDATA}/ASP.NET/HTTP:/root/.aspnet/http:ro
       
  TimeIntervalService2:
    container_name: ${DOCKER_REGISTRY-}timeintervalservice2
    image: timeintervalservice
    restart: always
    build:
      context: .
      dockerfile: ./TimeIntervalService/Dockerfile
    environment:
      - ASPNETCORE_ENVIORNMENT=Development
      - ASPNETCORE_HTTP_PORTS=80
      - ASPNETCORE_URLS=http://+
    ports:
      - "18200:8080"
    networks:
      paymentMachinePricingSystem_network:
        ipv4_address: 172.18.0.15
    volumes:
       - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets.ro
       - ${APPDATA}/ASP.NET/HTTPS:/root/.aspnet/https:ro
       - ${APPDATA}/ASP.NET/HTTP:/root/.aspnet/http:ro

  DumbPaymentMachine:
    container_name: ${DOCKER_REGISTRY-}dumbpaymentmachine
    image: dumbpaymentmachine
    restart: always
    build:
      context: .
      dockerfile: ./DumbPaymentMachine/Dockerfile
    environment:
      - ASPNETCORE_ENVIORNMENT=Development
      - ASPNETCORE_HTTP_PORTS=80
      - ASPNETCORE_URLS=http://+
    ports:
      - "27000:80"
    networks:
      paymentMachinePricingSystem_network:
        ipv4_address: 172.18.0.100
    volumes:
       - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets.ro
       - ${APPDATA}/ASP.NET/HTTPS:/root/.aspnet/https:ro
       - ${APPDATA}/ASP.NET/HTTP:/root/.aspnet/http:ro

#first we need to execute: docker network create --driver=bridge --subnet=172.18.0.0/24 paymentMachinePricingSystem_network
networks:
  paymentMachinePricingSystem_network:
    external: true
    # driver: bridge
    # ipam:
    #   config:
    #     - subnet: 172.18.0.0/16
    #       gateway: 172.18.0.1